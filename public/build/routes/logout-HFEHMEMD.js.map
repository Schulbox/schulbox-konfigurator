{
  "version": 3,
  "sources": ["../../../node_modules/jose/dist/browser/lib/buffer_utils.js", "../../../node_modules/jose/dist/browser/runtime/base64url.js", "../../../node_modules/jose/dist/browser/util/base64url.js", "../../../node_modules/jose/dist/browser/index.js", "../../../node_modules/node_modules/.pnpm/cookie@0.5.0/node_modules/cookie/index.js", "../../../node_modules/@supabase/auth-helpers-shared/src/browserCookieStorage.ts", "../../../node_modules/@supabase/auth-helpers-shared/src/utils/cookies.ts", "../../../node_modules/@supabase/auth-helpers-shared/src/utils/helpers.ts", "../../../node_modules/@supabase/auth-helpers-shared/src/utils/constants.ts", "../../../node_modules/@supabase/auth-helpers-shared/src/chunker.ts", "../../../node_modules/@supabase/auth-helpers-shared/src/cookieAuthStorageAdapter.ts", "../../../node_modules/@supabase/auth-helpers-shared/src/createClient.ts", "../../../node_modules/@supabase/auth-helpers-remix/src/index.ts", "../../../node_modules/@supabase/auth-helpers-remix/src/createSupabaseClient.ts", "../../../app/routes/logout.tsx"],
  "sourcesContent": ["import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    buffers.forEach((buffer) => {\n        buf.set(buffer, i);\n        i += buffer.length;\n    });\n    return buf;\n}\nexport function p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexport function lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await digest('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n", "import { encoder, decoder } from '../lib/buffer_utils.js';\nexport const encodeBase64 = (input) => {\n    let unencoded = input;\n    if (typeof unencoded === 'string') {\n        unencoded = encoder.encode(unencoded);\n    }\n    const CHUNK_SIZE = 0x8000;\n    const arr = [];\n    for (let i = 0; i < unencoded.length; i += CHUNK_SIZE) {\n        arr.push(String.fromCharCode.apply(null, unencoded.subarray(i, i + CHUNK_SIZE)));\n    }\n    return btoa(arr.join(''));\n};\nexport const encode = (input) => {\n    return encodeBase64(input).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n};\nexport const decodeBase64 = (encoded) => {\n    const binary = atob(encoded);\n    const bytes = new Uint8Array(binary.length);\n    for (let i = 0; i < binary.length; i++) {\n        bytes[i] = binary.charCodeAt(i);\n    }\n    return bytes;\n};\nexport const decode = (input) => {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    encoded = encoded.replace(/-/g, '+').replace(/_/g, '/').replace(/\\s/g, '');\n    try {\n        return decodeBase64(encoded);\n    }\n    catch (_a) {\n        throw new TypeError('The input to be decoded is not correctly encoded.');\n    }\n};\n", "import * as base64url from '../runtime/base64url.js';\nexport const encode = base64url.encode;\nexport const decode = base64url.decode;\n", "export { compactDecrypt } from './jwe/compact/decrypt.js';\nexport { flattenedDecrypt } from './jwe/flattened/decrypt.js';\nexport { generalDecrypt } from './jwe/general/decrypt.js';\nexport { GeneralEncrypt } from './jwe/general/encrypt.js';\nexport { compactVerify } from './jws/compact/verify.js';\nexport { flattenedVerify } from './jws/flattened/verify.js';\nexport { generalVerify } from './jws/general/verify.js';\nexport { jwtVerify } from './jwt/verify.js';\nexport { jwtDecrypt } from './jwt/decrypt.js';\nexport { CompactEncrypt } from './jwe/compact/encrypt.js';\nexport { FlattenedEncrypt } from './jwe/flattened/encrypt.js';\nexport { CompactSign } from './jws/compact/sign.js';\nexport { FlattenedSign } from './jws/flattened/sign.js';\nexport { GeneralSign } from './jws/general/sign.js';\nexport { SignJWT } from './jwt/sign.js';\nexport { EncryptJWT } from './jwt/encrypt.js';\nexport { calculateJwkThumbprint, calculateJwkThumbprintUri } from './jwk/thumbprint.js';\nexport { EmbeddedJWK } from './jwk/embedded.js';\nexport { createLocalJWKSet } from './jwks/local.js';\nexport { createRemoteJWKSet } from './jwks/remote.js';\nexport { UnsecuredJWT } from './jwt/unsecured.js';\nexport { exportPKCS8, exportSPKI, exportJWK } from './key/export.js';\nexport { importSPKI, importPKCS8, importX509, importJWK } from './key/import.js';\nexport { decodeProtectedHeader } from './util/decode_protected_header.js';\nexport { decodeJwt } from './util/decode_jwt.js';\nimport * as errors_1 from './util/errors.js';\nexport { errors_1 as errors };\nexport { generateKeyPair } from './key/generate_key_pair.js';\nexport { generateSecret } from './key/generate_secret.js';\nimport * as base64url_1 from './util/base64url.js';\nexport { base64url_1 as base64url };\nexport { default as cryptoRuntime } from './util/runtime.js';\n", "/*!\n * cookie\n * Copyright(c) 2012-2014 Roman Shtylman\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module exports.\n * @public\n */\n\nexports.parse = parse;\nexports.serialize = serialize;\n\n/**\n * Module variables.\n * @private\n */\n\nvar __toString = Object.prototype.toString\n\n/**\n * RegExp to match field-content in RFC 7230 sec 3.2\n *\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\n * field-vchar   = VCHAR / obs-text\n * obs-text      = %x80-FF\n */\n\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n *\n * @param {string} str\n * @param {object} [options]\n * @return {object}\n * @public\n */\n\nfunction parse(str, options) {\n  if (typeof str !== 'string') {\n    throw new TypeError('argument str must be a string');\n  }\n\n  var obj = {}\n  var opt = options || {};\n  var dec = opt.decode || decode;\n\n  var index = 0\n  while (index < str.length) {\n    var eqIdx = str.indexOf('=', index)\n\n    // no more cookie pairs\n    if (eqIdx === -1) {\n      break\n    }\n\n    var endIdx = str.indexOf(';', index)\n\n    if (endIdx === -1) {\n      endIdx = str.length\n    } else if (endIdx < eqIdx) {\n      // backtrack on prior semicolon\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\n      continue\n    }\n\n    var key = str.slice(index, eqIdx).trim()\n\n    // only assign once\n    if (undefined === obj[key]) {\n      var val = str.slice(eqIdx + 1, endIdx).trim()\n\n      // quoted values\n      if (val.charCodeAt(0) === 0x22) {\n        val = val.slice(1, -1)\n      }\n\n      obj[key] = tryDecode(val, dec);\n    }\n\n    index = endIdx + 1\n  }\n\n  return obj;\n}\n\n/**\n * Serialize data into a cookie header.\n *\n * Serialize the a name value pair into a cookie string suitable for\n * http headers. An optional options object specified cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n *\n * @param {string} name\n * @param {string} val\n * @param {object} [options]\n * @return {string}\n * @public\n */\n\nfunction serialize(name, val, options) {\n  var opt = options || {};\n  var enc = opt.encode || encode;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  var value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  var str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    var maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid')\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    var expires = opt.expires\n\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + expires.toUTCString()\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.priority) {\n    var priority = typeof opt.priority === 'string'\n      ? opt.priority.toLowerCase()\n      : opt.priority\n\n    switch (priority) {\n      case 'low':\n        str += '; Priority=Low'\n        break\n      case 'medium':\n        str += '; Priority=Medium'\n        break\n      case 'high':\n        str += '; Priority=High'\n        break\n      default:\n        throw new TypeError('option priority is invalid')\n    }\n  }\n\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string'\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\n\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction decode (str) {\n  return str.indexOf('%') !== -1\n    ? decodeURIComponent(str)\n    : str\n}\n\n/**\n * URL-encode value.\n *\n * @param {string} str\n * @returns {string}\n */\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n}\n\n/**\n * Determine if value is a Date.\n *\n * @param {*} val\n * @private\n */\n\nfunction isDate (val) {\n  return __toString.call(val) === '[object Date]' ||\n    val instanceof Date\n}\n\n/**\n * Try decoding a string using a decoding function.\n *\n * @param {string} str\n * @param {function} decode\n * @private\n */\n\nfunction tryDecode(str, decode) {\n  try {\n    return decode(str);\n  } catch (e) {\n    return str;\n  }\n}\n", "import { parse, serialize } from 'cookie';\nimport { CookieAuthStorageAdapter } from './cookieAuthStorageAdapter';\nimport { CookieOptions } from './types';\nimport { isBrowser } from './utils';\n\nexport class BrowserCookieAuthStorageAdapter extends CookieAuthStorageAdapter {\n\tconstructor(cookieOptions?: CookieOptions) {\n\t\tsuper(cookieOptions);\n\t}\n\n\tprotected getCookie(name: string) {\n\t\tif (!isBrowser()) return null;\n\n\t\tconst cookies = parse(document.cookie);\n\t\treturn cookies[name];\n\t}\n\n\tprotected setCookie(name: string, value: string) {\n\t\tif (!isBrowser()) return null;\n\n\t\tdocument.cookie = serialize(name, value, {\n\t\t\t...this.cookieOptions,\n\t\t\thttpOnly: false\n\t\t});\n\t}\n\n\tprotected deleteCookie(name: string) {\n\t\tif (!isBrowser()) return null;\n\n\t\tdocument.cookie = serialize(name, '', {\n\t\t\t...this.cookieOptions,\n\t\t\tmaxAge: 0,\n\t\t\thttpOnly: false\n\t\t});\n\t}\n}\n", "import { Session } from '@supabase/supabase-js';\nimport { parse, serialize } from 'cookie';\nimport { base64url } from 'jose';\n\nexport { parse as parseCookies, serialize as serializeCookie };\n\n/**\n * Based on the environment and the request we know if a secure cookie can be set.\n */\nexport function isSecureEnvironment(headerHost?: string | string[]) {\n\tif (!headerHost) {\n\t\tthrow new Error('The \"host\" request header is not available');\n\t}\n\n\tconst headerHostStr = Array.isArray(headerHost) ? headerHost[0] : headerHost;\n\n\tconst host = (headerHostStr.indexOf(':') > -1 && headerHostStr.split(':')[0]) || headerHostStr;\n\tif (['localhost', '127.0.0.1'].indexOf(host) > -1 || host.endsWith('.local')) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nexport function parseSupabaseCookie(str: string | null | undefined): Partial<Session> | null {\n\tif (!str) {\n\t\treturn null;\n\t}\n\n\ttry {\n\t\tconst session = JSON.parse(str);\n\t\tif (!session) {\n\t\t\treturn null;\n\t\t}\n\t\t// Support previous cookie which was a stringified session object.\n\t\tif (session.constructor.name === 'Object') {\n\t\t\treturn session;\n\t\t}\n\t\tif (session.constructor.name !== 'Array') {\n\t\t\tthrow new Error(`Unexpected format: ${session.constructor.name}`);\n\t\t}\n\n\t\tconst [_header, payloadStr, _signature] = session[0].split('.');\n\t\tconst payload = base64url.decode(payloadStr);\n\t\tconst decoder = new TextDecoder();\n\n\t\tconst { exp, sub, ...user } = JSON.parse(decoder.decode(payload));\n\n\t\treturn {\n\t\t\texpires_at: exp,\n\t\t\texpires_in: exp - Math.round(Date.now() / 1000),\n\t\t\ttoken_type: 'bearer',\n\t\t\taccess_token: session[0],\n\t\t\trefresh_token: session[1],\n\t\t\tprovider_token: session[2],\n\t\t\tprovider_refresh_token: session[3],\n\t\t\tuser: {\n\t\t\t\tid: sub,\n\t\t\t\tfactors: session[4],\n\t\t\t\t...user\n\t\t\t}\n\t\t};\n\t} catch (err) {\n\t\tconsole.warn('Failed to parse cookie string:', err);\n\t\treturn null;\n\t}\n}\n\nexport function stringifySupabaseSession(session: Session): string {\n\treturn JSON.stringify([\n\t\tsession.access_token,\n\t\tsession.refresh_token,\n\t\tsession.provider_token,\n\t\tsession.provider_refresh_token,\n\t\tsession.user?.factors ?? null\n\t]);\n}\n", "export function isBrowser() {\n\treturn typeof window !== 'undefined' && typeof window.document !== 'undefined';\n}\n", "import { DefaultCookieOptions } from '../types';\n\nexport const DEFAULT_COOKIE_OPTIONS: DefaultCookieOptions = {\n\tpath: '/',\n\tsameSite: 'lax',\n\tmaxAge: 60 * 60 * 24 * 365 * 1000\n};\n", "interface Chunk {\n\tname: string;\n\tvalue: string;\n}\n\nfunction createChunkRegExp(chunkSize: number) {\n\treturn new RegExp('.{1,' + chunkSize + '}', 'g');\n}\n\nconst MAX_CHUNK_SIZE = 3180;\nconst MAX_CHUNK_REGEXP = createChunkRegExp(MAX_CHUNK_SIZE);\n\n/**\n * create chunks from a string and return an array of object\n */\nexport function createChunks(key: string, value: string, chunkSize?: number): Chunk[] {\n\tconst re = chunkSize !== undefined ? createChunkRegExp(chunkSize) : MAX_CHUNK_REGEXP;\n\n\t// check the length of the string to work out if it should be returned or chunked\n\tconst chunkCount = Math.ceil(value.length / (chunkSize ?? MAX_CHUNK_SIZE));\n\n\tif (chunkCount === 1) {\n\t\treturn [{ name: key, value }];\n\t}\n\n\tconst chunks: Chunk[] = [];\n\t// split string into a array based on the regex\n\tconst values = value.match(re);\n\tvalues?.forEach((value, i) => {\n\t\tconst name: string = `${key}.${i}`;\n\t\tchunks.push({ name, value });\n\t});\n\n\treturn chunks;\n}\n\n// Get fully constructed chunks\nexport function combineChunks(\n\tkey: string,\n\tretrieveChunk: (name: string) => string | null | undefined = () => {\n\t\treturn null;\n\t}\n) {\n\tlet values: string[] = [];\n\tfor (let i = 0; ; i++) {\n\t\tconst chunkName = `${key}.${i}`;\n\t\tconst chunk = retrieveChunk(chunkName);\n\n\t\tif (!chunk) {\n\t\t\tbreak;\n\t\t}\n\n\t\tvalues.push(chunk);\n\t}\n\n\treturn values.length ? values.join('') : null;\n}\n", "import { GoTrueClientOptions, Session } from '@supabase/supabase-js';\nimport { DEFAULT_COOKIE_OPTIONS, parseSupabaseCookie, stringifySupabaseSession } from './utils';\nimport { CookieOptions, DefaultCookieOptions } from './types';\nimport { combineChunks, createChunks } from './chunker';\n\nexport interface StorageAdapter extends Exclude<GoTrueClientOptions['storage'], undefined> {}\n\nexport abstract class CookieAuthStorageAdapter implements StorageAdapter {\n\tprotected readonly cookieOptions: DefaultCookieOptions;\n\n\tconstructor(cookieOptions?: CookieOptions) {\n\t\tthis.cookieOptions = {\n\t\t\t...DEFAULT_COOKIE_OPTIONS,\n\t\t\t...cookieOptions,\n\t\t\tmaxAge: DEFAULT_COOKIE_OPTIONS.maxAge\n\t\t};\n\t}\n\n\tprotected abstract getCookie(name: string): string | undefined | null;\n\tprotected abstract setCookie(name: string, value: string): void;\n\tprotected abstract deleteCookie(name: string): void;\n\n\tgetItem(key: string): string | Promise<string | null> | null {\n\t\tconst value = this.getCookie(key);\n\n\t\t// pkce code verifier\n\t\tif (key.endsWith('-code-verifier') && value) {\n\t\t\treturn value;\n\t\t}\n\n\t\tif (value) {\n\t\t\treturn JSON.stringify(parseSupabaseCookie(value));\n\t\t}\n\n\t\tconst chunks = combineChunks(key, (chunkName) => {\n\t\t\treturn this.getCookie(chunkName);\n\t\t});\n\n\t\treturn chunks !== null ? JSON.stringify(parseSupabaseCookie(chunks)) : null;\n\t}\n\n\tsetItem(key: string, value: string): void | Promise<void> {\n\t\t// pkce code verifier\n\t\tif (key.endsWith('-code-verifier')) {\n\t\t\tthis.setCookie(key, value);\n\t\t\treturn;\n\t\t}\n\n\t\tlet session: Session = JSON.parse(value);\n\t\tconst sessionStr = stringifySupabaseSession(session);\n\n\t\t// split session string before setting cookie\n\t\tconst sessionChunks = createChunks(key, sessionStr);\n\n\t\tsessionChunks.forEach((sess) => {\n\t\t\tthis.setCookie(sess.name, sess.value);\n\t\t});\n\t}\n\n\tremoveItem(key: string): void | Promise<void> {\n\t\tthis._deleteSingleCookie(key);\n\t\tthis._deleteChunkedCookies(key);\n\t}\n\n\tprivate _deleteSingleCookie(key: string) {\n\t\tif (this.getCookie(key)) {\n\t\t\tthis.deleteCookie(key);\n\t\t}\n\t}\n\n\tprivate _deleteChunkedCookies(key: string, from = 0) {\n\t\tfor (let i = from; ; i++) {\n\t\t\tconst cookieName = `${key}.${i}`;\n\t\t\tconst value = this.getCookie(cookieName);\n\n\t\t\tif (value === undefined) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.deleteCookie(cookieName);\n\t\t}\n\t}\n}\n", "import { createClient } from '@supabase/supabase-js';\nimport { SupabaseClientOptionsWithoutAuth } from './types';\nimport { isBrowser } from './utils';\nimport { StorageAdapter } from './cookieAuthStorageAdapter';\nimport { GenericSchema } from '@supabase/supabase-js/dist/module/lib/types';\n\nexport function createSupabaseClient<\n\tDatabase = any,\n\tSchemaName extends string & keyof Database = 'public' extends keyof Database\n\t\t? 'public'\n\t\t: string & keyof Database,\n\tSchema extends GenericSchema = Database[SchemaName] extends GenericSchema\n\t\t? Database[SchemaName]\n\t\t: any\n>(\n\tsupabaseUrl: string,\n\tsupabaseKey: string,\n\toptions: SupabaseClientOptionsWithoutAuth<SchemaName> & {\n\t\tauth: {\n\t\t\tstorage: StorageAdapter;\n\t\t\tstorageKey?: string;\n\t\t};\n\t}\n) {\n\tconst browser = isBrowser();\n\n\treturn createClient<Database, SchemaName, Schema>(supabaseUrl, supabaseKey, {\n\t\t...options,\n\t\tauth: {\n\t\t\tflowType: 'pkce',\n\t\t\tautoRefreshToken: browser,\n\t\t\tdetectSessionInUrl: browser,\n\t\t\tpersistSession: true,\n\t\t\tstorage: options.auth.storage,\n\n\t\t\t// fix this in supabase-js\n\t\t\t...(options.auth?.storageKey\n\t\t\t\t? {\n\t\t\t\t\t\tstorageKey: options.auth.storageKey\n\t\t\t\t  }\n\t\t\t\t: {})\n\t\t}\n\t});\n}\n", "// Methods\nexport { createBrowserClient, createServerClient } from './createSupabaseClient';\n\n// Types\nexport type { Session, User, SupabaseClient } from '@supabase/supabase-js';\n", "import {\n\tBrowserCookieAuthStorageAdapter,\n\tCookieAuthStorageAdapter,\n\tCookieOptions,\n\tCookieOptionsWithName,\n\tcreateSupabaseClient,\n\tparseCookies,\n\tserializeCookie,\n\tSupabaseClientOptionsWithoutAuth\n} from '@supabase/auth-helpers-shared';\nimport { SupabaseClient } from '@supabase/supabase-js';\nimport { GenericSchema } from '@supabase/supabase-js/dist/module/lib/types';\n\n/**\n * ## Authenticated Supabase client\n * ### Loader\n *\n * ```ts\n * import { createServerClient } from '@supabase/auth-helpers-remix';\n *\n * export const loader = async ({ request }: { request: Request }) => {\n *   const response = new Response();\n *\n *   const supabaseClient = createServerClient(\n *     process.env.SUPABASE_URL,\n *     process.env.SUPABASE_ANON_KEY,\n *     { request, response }\n *   );\n *\n *   const { data } = await supabaseClient.from('test').select('*');\n *\n *   return json(\n *    { data },\n *    { headers: response.headers }\n *   );\n * };\n * ```\n *\n * ### Action\n *\n * ```ts\n * import { createServerClient } from '@supabase/auth-helpers-remix';\n *\n * export const action = async ({ request }: { request: Request }) => {\n *   const response = new Response();\n *\n *   const supabaseClient = createServerClient(\n *     process.env.SUPABASE_URL,\n *     process.env.SUPABASE_ANON_KEY,\n *     { request, response }\n *   );\n *\n *   const { data } = await supabaseClient.from('test').select('*');\n *\n *   return json(\n *    { data },\n *    { headers: response.headers }\n *   );\n * };\n * ```\n *\n * ### Component\n *\n * ```ts\n * import { createBrowserClient } from '@supabase/auth-helpers-remix';\n *\n * useEffect(() => {\n *   const supabaseClient = createBrowserClient(\n *     window.env.SUPABASE_URL,\n *     window.env.SUPABASE_ANON_KEY\n *   );\n *\n *   const getData = async () => {\n *     const { data: supabaseData } = await supabaseClient\n *       .from('test')\n *       .select('*');\n *\n *     console.log({ data });\n *   };\n *\n *   getData();\n * }, []);\n * ```\n *\n * Note: window.env is not automatically populated by Remix\n * Check out the [example app](../../../../examples/remix/app/root.tsx) or\n * [Remix docs](https://remix.run/docs/en/v1/guides/envvars#browser-environment-variables) for more info\n */\n\nexport function createBrowserClient<\n\tDatabase = any,\n\tSchemaName extends string & keyof Database = 'public' extends keyof Database\n\t\t? 'public'\n\t\t: string & keyof Database,\n\tSchema extends GenericSchema = Database[SchemaName] extends GenericSchema\n\t\t? Database[SchemaName]\n\t\t: any\n>(\n\tsupabaseUrl: string,\n\tsupabaseKey: string,\n\t{\n\t\toptions,\n\t\tcookieOptions\n\t}: {\n\t\toptions?: SupabaseClientOptionsWithoutAuth<SchemaName>;\n\t\tcookieOptions?: CookieOptionsWithName;\n\t} = {}\n): SupabaseClient<Database, SchemaName, Schema> {\n\tif (!supabaseUrl || !supabaseKey) {\n\t\tthrow new Error(\n\t\t\t'supabaseUrl and supabaseKey are required to create a Supabase client! Find these under `Settings` > `API` in your Supabase dashboard.'\n\t\t);\n\t}\n\n\tconst storageKey = cookieOptions?.name;\n\tdelete cookieOptions?.name;\n\n\treturn createSupabaseClient<Database, SchemaName, Schema>(supabaseUrl, supabaseKey, {\n\t\t...options,\n\t\tglobal: {\n\t\t\t...options?.global,\n\t\t\theaders: {\n\t\t\t\t...options?.global?.headers,\n\t\t\t\t'X-Client-Info': `${PACKAGE_NAME}@${PACKAGE_VERSION}`\n\t\t\t}\n\t\t},\n\t\tauth: {\n\t\t\tstorageKey,\n\t\t\tstorage: new BrowserCookieAuthStorageAdapter(cookieOptions)\n\t\t}\n\t});\n}\n\nclass RemixServerAuthStorageAdapter extends CookieAuthStorageAdapter {\n\treadonly isServer = true;\n\n\tconstructor(\n\t\tprivate readonly request: Request,\n\t\tprivate readonly response: Response,\n\t\tcookieOptions?: CookieOptions\n\t) {\n\t\tsuper(cookieOptions);\n\t}\n\n\tprotected getCookie(name: string): string | null | undefined {\n\t\treturn parseCookies(this.request?.headers?.get('Cookie') ?? '')[name];\n\t}\n\tprotected setCookie(name: string, value: string): void {\n\t\tconst cookieStr = serializeCookie(name, value, {\n\t\t\t...this.cookieOptions,\n\t\t\t// Allow supabase-js on the client to read the cookie as well\n\t\t\thttpOnly: false\n\t\t});\n\t\tthis.response.headers.append('set-cookie', cookieStr);\n\t}\n\tprotected deleteCookie(name: string): void {\n\t\tconst cookieStr = serializeCookie(name, '', {\n\t\t\t...this.cookieOptions,\n\t\t\tmaxAge: 0,\n\t\t\t// Allow supabase-js on the client to read the cookie as well\n\t\t\thttpOnly: false\n\t\t});\n\t\tthis.response.headers.append('set-cookie', cookieStr);\n\t}\n}\n\nexport function createServerClient<\n\tDatabase = any,\n\tSchemaName extends string & keyof Database = 'public' extends keyof Database\n\t\t? 'public'\n\t\t: string & keyof Database,\n\tSchema extends GenericSchema = Database[SchemaName] extends GenericSchema\n\t\t? Database[SchemaName]\n\t\t: any\n>(\n\tsupabaseUrl: string,\n\tsupabaseKey: string,\n\t{\n\t\trequest,\n\t\tresponse,\n\t\toptions,\n\t\tcookieOptions\n\t}: {\n\t\trequest: Request;\n\t\tresponse: Response;\n\t\toptions?: SupabaseClientOptionsWithoutAuth<SchemaName>;\n\t\tcookieOptions?: CookieOptionsWithName;\n\t}\n): SupabaseClient<Database, SchemaName, Schema> {\n\tif (!supabaseUrl || !supabaseKey) {\n\t\tthrow new Error(\n\t\t\t'supabaseUrl and supabaseKey are required to create a Supabase client! Find these under `Settings` > `API` in your Supabase dashboard.'\n\t\t);\n\t}\n\n\tif (!request || !response) {\n\t\tthrow new Error(\n\t\t\t'request and response must be passed to createSupabaseClient function, when called from loader or action'\n\t\t);\n\t}\n\n\treturn createSupabaseClient<Database, SchemaName, Schema>(supabaseUrl, supabaseKey, {\n\t\t...options,\n\t\tglobal: {\n\t\t\t...options?.global,\n\t\t\theaders: {\n\t\t\t\t...options?.global?.headers,\n\t\t\t\t'X-Client-Info': `${PACKAGE_NAME}@${PACKAGE_VERSION}`\n\t\t\t}\n\t\t},\n\t\tauth: {\n\t\t\tstorage: new RemixServerAuthStorageAdapter(request, response, cookieOptions)\n\t\t}\n\t});\n}\n", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\logout.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\logout.tsx\");\n  import.meta.hot.lastModified = \"1745191572354.5205\";\n}\n// REMIX HMR END\n\n// app/routes/logout.tsx\nimport { redirect } from \"@remix-run/node\";\nimport { createServerClient } from \"@supabase/auth-helpers-remix\";\nexport const action = async ({\n  request\n}) => {\n  const supabase = createServerClient(process.env.SUPABASE_URL, process.env.SUPABASE_ANON_KEY, {\n    request,\n    response: new Response()\n  });\n  await supabase.auth.signOut();\n  return redirect(\"/\");\n};\nexport default function LogoutPage() {\n  return <form method=\"post\">\r\n      <button type=\"submit\" className=\"bg-red-500 text-white px-4 py-2 rounded\">\r\n        Ausloggen\r\n      </button>\r\n    </form>;\n}\n_c = LogoutPage;\nvar _c;\n$RefreshReg$(_c, \"LogoutPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["decode", "encode", "init_base64url", "init_base64url", "decoder", "value", "import_cookie", "__commonJS", "parse", "serialize", "decode", "encode", "__toESM", "__export", "createServerClient", "__toCommonJS"]
}
